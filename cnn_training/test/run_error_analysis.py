#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ –æ—à–∏–±–æ–∫ CNN –º–æ–¥–µ–ª–∏
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))))

from cnn_training.test.error_analyzer import CNNErrorAnalyzer

def quick_analysis():
    """–ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑ –æ—à–∏–±–æ–∫"""
    print("üöÄ –ë–´–°–¢–†–´–ô –ê–ù–ê–õ–ò–ó –û–®–ò–ë–û–ö CNN")
    print("=" * 40)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    model_path = "cnn_training/result/multi/runs/93b1/cnn_model_multi_best.pth"
    test_symbol = "SOLUSDT"  # –¢–æ–ª—å–∫–æ –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª –¥–ª—è –±—ã—Å—Ç—Ä–æ—Ç—ã
    
    print(f"üìä –ú–æ–¥–µ–ª—å: {model_path}")
    print(f"üéØ –¢–µ—Å—Ç–æ–≤—ã–π —Å–∏–º–≤–æ–ª: {test_symbol}")
    print()
    
    # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
    analyzer = CNNErrorAnalyzer()
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º
    result = analyzer.analyze_single_symbol(model_path, test_symbol)
    
    if 'error' in result:
        print(f"‚ùå –û—à–∏–±–∫–∞: {result['error']}")
        return
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    analyzer.print_detailed_analysis(result)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    recommendations = analyzer.generate_recommendations(result)
    print("\n".join(recommendations))

if __name__ == "__main__":
    quick_analysis()
