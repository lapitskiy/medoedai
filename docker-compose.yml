services:
  postgres:
    image: postgres:14
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: medoed_db
      POSTGRES_USER: medoed_user
      POSTGRES_PASSWORD: medoed
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 5s

  medoedai:
    build: .
    container_name: medoedai
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "5050:5050"
    environment:
      TORCHSERVE_URL: http://serving:8080/predictions/medoedai_model
      DISABLE_TORCH_COMPILE: "true"   # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å torch.compile –¥–ª—è Tesla P100
      FORCE_DISABLE_TORCH_COMPILE: "true"  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç torch.compile
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      PYTHONDONTWRITEBYTECODE: "1"
      FLASK_DEBUG: "False"
    volumes:
      - .:/workspace
      - /var/run/docker.sock:/var/run/docker.sock  # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ Docker API
    working_dir: /workspace
    command: >
      sh -c "
        echo 'üßπ –û—á–∏—â–∞—é Redis –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º...' &&
        python clear_redis.py &&
        echo '‚úÖ Redis –æ—á–∏—â–µ–Ω, –∑–∞–ø—É—Å–∫–∞—é Flask...' &&
        python main.py
      "
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  celery-worker:
    build: .
    container_name: celery-worker
    depends_on:
      medoedai:
        condition: service_started
      redis:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      PYTHONDONTWRITEBYTECODE: "1"
      DISABLE_TORCH_COMPILE: "true"   # –û—Ç–∫–ª—é—á–∏—Ç—å torch.compile –¥–ª—è Tesla P100
      FORCE_DISABLE_TORCH_COMPILE: "true"  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞
    env_file:
      - .env
    volumes:
      - .:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /workspace
    command: ["celery", "-A", "tasks.celery_tasks", "worker",
              "-Q", "train,celery", "-P", "solo", "-c", "1", "--loglevel=info"]
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  pytorch-gpu:
    image: pytorch/pytorch:2.2.2-cuda12.1-cudnn8-runtime
    container_name: pytorch-gpu
    depends_on:
      celery-worker:
        condition: service_started
    restart: unless-stopped
    ports:
      - "8090:8090"
    volumes:
      - ./workspace:/workspace
      - ./models:/models
    working_dir: /workspace
    command: ["sleep", "infinity"]
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  trading_agent:
    build:
      context: .
      dockerfile: Dockerfile.trading_agent
    container_name: trading_agent
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - BYBIT_API_KEY=${BYBIT_API_KEY:-}
      - BYBIT_SECRET_KEY=${BYBIT_SECRET_KEY:-}
      - TRADING_MODE=${TRADING_MODE:-sandbox}
    volumes:
      - .:/workspace
      - /var/run/docker.sock:/var/run/docker.sock  # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ Docker API
    working_dir: /workspace
    command: ["sleep", "infinity"]  # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è —É–¥–µ—Ä–∂–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]    

  celery-beat:
    build: .
    container_name: celery-beat
    command: ["celery", "-A", "tasks.celery_tasks", "beat", "--loglevel=info"]
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - .:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /workspace
    depends_on:
      - redis
      - celery-worker
    restart: unless-stopped

volumes:
  pgdata:

